package com.odyssey.swiftnotes.database

import android.content.Context
import android.database.sqlite.SQLiteDatabase
import android.database.sqlite.SQLiteOpenHelper

/**
 * Generated by ObscuriaAndroidDAOGenerator
 */
class MyNotesHandler internal constructor(context: Context) : SQLiteOpenHelper(context, DATABASE_NAME, null, DATABASE_VERSION) {

    override fun onCreate(db: SQLiteDatabase) {
        db.execSQL(CREATE_TABLE_CATEGORIE)
        db.execSQL(CREATE_TABLE_NOTE)
    }

    override fun onUpgrade(db: SQLiteDatabase, oldVersion: Int, newVersion: Int) {
        db.execSQL(DROP_TABLE_NOTE)
        db.execSQL(DROP_TABLE_CATEGORIE)
        onCreate(db)
    }

    companion object {
        private val DATABASE_VERSION = 1
        private val DATABASE_NAME = "MyNotes.db"

        /**
         * TABLE CATEGORIE
         */
        val NOM_TABLE_CATEGORIE = "Categorie"
        val ID_CATEGORIE = "id"
        val TITRE_CATEGORIE = "titre"
        val COULEUR_CATEGORIE = "couleur"

        private val CREATE_TABLE_CATEGORIE = "CREATE TABLE " + NOM_TABLE_CATEGORIE + " ( " +
                ID_CATEGORIE + " INTEGER PRIMARY KEY AUTOINCREMENT," +
                TITRE_CATEGORIE + " TEXT NOT NULL ," +
                COULEUR_CATEGORIE + " TEXT NOT NULL  " +
                ");"

        private val DROP_TABLE_CATEGORIE =
                "DROP TABLE IF EXISTS $NOM_TABLE_CATEGORIE ;"


        /**
         * TABLE NOTE
         */
        val NOM_TABLE_NOTE = "Note"
        val ID_NOTE = "id"
        val TITRE_NOTE = "titre"
        val DATE_NOTE = "date"
        val DESCRIPTION_NOTE = "description"
        val ALARME_NOTE = "alarme"
        val IDCATEG_NOTE = "idCateg"

        private val CREATE_TABLE_NOTE = "CREATE TABLE " + NOM_TABLE_NOTE + " ( " +
                ID_NOTE + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                TITRE_NOTE + " TEXT NOT NULL , " +
                DATE_NOTE + " TEXT NOT NULL , " +
                DESCRIPTION_NOTE + " TEXT , " +
                ALARME_NOTE + " TEXT NOT NULL, " +
                IDCATEG_NOTE + " INTEGER NOT NULL  " +
                ");"

        private val DROP_TABLE_NOTE =
                "DROP TABLE IF EXISTS $NOM_TABLE_NOTE ;"
    }
}
