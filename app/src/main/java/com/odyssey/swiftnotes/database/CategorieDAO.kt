package com.odyssey.swiftnotes.database

import android.content.ContentValues
import android.content.Context
import android.database.Cursor

import com.odyssey.swiftnotes.helpers.Categorie

import java.util.ArrayList

/**
 * Generated by ObscuriaAndroidDAOGenerator
 */
class CategorieDAO(context: Context) : DAOBase(context) {

    internal var toutesLesColonnes = arrayOf(MyNotesHandler.ID_CATEGORIE, MyNotesHandler.TITRE_CATEGORIE, MyNotesHandler.COULEUR_CATEGORIE)

    fun addCategorie(c: Categorie): Long {
        val values = ContentValues()
        values.put(MyNotesHandler.TITRE_CATEGORIE, c.titre)
        values.put(MyNotesHandler.COULEUR_CATEGORIE, c.couleur)
        return db.insert(MyNotesHandler.NOM_TABLE_CATEGORIE, null, values)
    }

    fun delCategorie(c: Categorie): Int {
        return db.delete(MyNotesHandler.NOM_TABLE_CATEGORIE, MyNotesHandler.ID_CATEGORIE + " = ?", arrayOf(c.id.toString()))
    }

    fun delCategorie(id: Long): Int {
        return db.delete(MyNotesHandler.NOM_TABLE_CATEGORIE, MyNotesHandler.ID_CATEGORIE + " = ?", arrayOf(id.toString()))
    }

    fun modifyCategorie(c: Categorie): Int {
        val values = ContentValues()
        values.put(MyNotesHandler.TITRE_CATEGORIE, c.titre)
        values.put(MyNotesHandler.COULEUR_CATEGORIE, c.couleur)

        return db.update(MyNotesHandler.NOM_TABLE_CATEGORIE, values, MyNotesHandler.ID_CATEGORIE + " = ?", arrayOf(c.id.toString()))
    }

    fun selectAllCategories(): Cursor {
        return db.query(MyNotesHandler.NOM_TABLE_CATEGORIE, toutesLesColonnes, null, null, null, null, null)
    }

    fun selectCategorie(idCategorie: Long): Categorie {
        val cursor = db.query(MyNotesHandler.NOM_TABLE_CATEGORIE, toutesLesColonnes, MyNotesHandler.ID_CATEGORIE + " = ?", arrayOf(idCategorie.toString()), null, null, null)
        cursor.moveToFirst()
        return Categorie(cursor.getLong(0), cursor.getString(1), cursor.getString(2))
    }

    fun getCategorieByName(categorie: String): Categorie? {
        val cursor = db.query(MyNotesHandler.NOM_TABLE_CATEGORIE, toutesLesColonnes, MyNotesHandler.TITRE_CATEGORIE + " = ?", arrayOf(categorie), null, null, null)
        cursor.moveToFirst()
        var categorie1: Categorie? = null

        while (!cursor.isAfterLast) {

            categorie1 = Categorie(cursor.getLong(0), cursor.getString(1), cursor.getString(2))
            cursor.moveToNext()
        }
        cursor.close()
        return categorie1
    }

    fun listeCategories(): List<Categorie> {
        val liste = ArrayList<Categorie>()
        val cursor = selectAllCategories()

        cursor.moveToFirst()
        while (!cursor.isAfterLast) {
            liste.add(Categorie(cursor.getLong(0), cursor.getString(1), cursor.getString(2)))
            cursor.moveToNext()
        }
        cursor.close()
        return liste
    }

    fun deleteAllCategories() {
        db.delete(MyNotesHandler.NOM_TABLE_CATEGORIE, null, null)
    }

}
